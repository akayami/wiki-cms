#!/usr/bin/env node
const program = require('commander');

let configFile;

program
	.version('0.0.1')
	.arguments('<configfile>')
	.action(function(c) {
		configFile = c;
	});
program.parse(process.argv);

const toml = require('toml');
const concat = require('concat-stream');
const fs = require('fs');
const path = require('path');
let cfgfile;
try {
	cfgfile = path.resolve(__dirname, configFile);
} catch(e) {
	console.error('Invalid config file provided: ' + configFile);
	process.exit();
}

const cluster = require('cluster');

function newWorker() {
	const worker = cluster.fork();
	worker.on('exit', function(code, signal) {
		if (signal) {
			console.log(`Worker killed by signal: ${signal}`);
		} else if (code !== 0) {
			console.log(`worker exited with error code: ${code}`);
		} else {
			console.log('worker success!');
		}
	});
	return worker;
}

fs.createReadStream(cfgfile, 'utf8').pipe(concat(function(data) {
	const config = toml.parse(data);

	const git = require('simple-git')(config.git.repo);

	const numCPUs = require('os').cpus().length;

	if (cluster.isMaster) {
		const remote = (config.git.remote ? config.git.remote : 'origin');
		const branch = (config.git.branch ? config.git.branch : 'master');
		git.pull(remote, branch, function() {
			console.log('Pull Done');
		});

		setInterval(function() {
			git.pull(remote, branch, function(err) {
				if (err) {
					console.log(err);
				}
				console.log('Auto Pull Done');
			});
		}, (config.git.pull_freq ? config.git.pull_freq : 60000));

		setInterval(function() {
			git.push(remote, branch, function(err) {
				if (err) {
					console.log(err);
				}
				console.log('Auto Push Done');
			});
		}, (config.git.push_freq ? config.git.push_freq : 60000));

		// Fork workers.
		for (let i = 0; i < numCPUs; i++) {
			const worker = newWorker();
		}

		const event = cluster.on('exit', function(deadWorker, code, signal) {
			const worker = newWorker();

			// Note the process IDs
			const newPID = worker.process.pid;
			const oldPID = deadWorker.process.pid;

			// Log the event
			console.log('worker ' + oldPID + ' died.');
			console.log('worker ' + newPID + ' born.');

		});
	} else {
		require('./worker.js');
	}
}));
